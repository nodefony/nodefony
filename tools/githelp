
// ADD TAG
$ git tag release01
$ git push origin release01


// REMOVE TAG :
$ git tag -d release01
$ git push origin :refs/tags/release01


// ADD REMOTE BRANCH
git push -u origin <branch_name>

// TRACK REMOTE BRANCH
$ git branch --track name origin/dev
$ git checkout -b dev --track  origin/dev


// track ignored file
$ git ls-files --ignored --exclude-standard
$ git update-index --assume-unchanged file


// SSH add key
$ eval "$(ssh-agent -s)"
$ ssh-add -K ~/.ssh/my_github_key/id_rsa



// submodules

  // add submodules
git submodule add https://github.com/nodefony/nodefony-stage.git ./src/stage

  // rm submodules
git submodule deinit .
git rm --cached src/stage
// rm in .gitmodules
submodule "src/stage"]
        path = src/stage
        url = https://github.com/nodefony/nodefony-stage.git


/*
 *	CLONE GIT BARE
 *	on new server git
 */
$ git clone --bare git@olddomain:~/projet.git
$ git config remote.origin.url git@newdomain:~/projet.git


/*
 *	DELETE branch
 */
//local
git branch -d myBranch
//remote
git push origin --delete <branch_name>
//or
git push origin :<branch_name>

// add github project
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/nodefony/nodefony-project.git
git push -u origin master

/**
*   ADD git branch PROMT BASH
**/

parse_git_branch() {
   git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
