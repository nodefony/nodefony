name:                  nodefony-core
on:                    [push]
services:
  nginx:
    image:             nginx
    ports:
      - 8080:80
    env:
      NGINX_PORT:      80
  redis:
    image:             redis
    ports:
      - 6379/tcp
jobs:
  hello:
    runs-on:           ubuntu-latest
    name:              A job to say hello
    steps:
    - name:            Checkout
      uses:            actions/checkout@v1
    - name:            Hello world action step
      id:              hello
      uses:            ./tools/actions/hello # Uses an action in the root directory
      with:
        who-to-greet:  'Nodefony'
    # Use the output from the `hello` step
    - name:            Get the output time
      run:             echo "The time was ${{ steps.hello.outputs.time }}"
  build-linux:
    runs-on:           ubuntu-latest
    strategy:
      matrix:
        #node-version: [8.x, 10.x, 12.x]
        node-version:  [12.x]
    steps:
    - uses:            actions/checkout@v1
    - name:            Use Node.js ${{ matrix.node-version }}
      uses:            actions/setup-node@v1
      with:
        node-version:  ${{ matrix.node-version }}
    - name:            npm install, build, and test
      run:             |
        git submodule sync
        git submodule update --init --recursive
        npm install
        npm link src/nodefony
        npm run build --if-present
        nodefony start
        sleep 60;
        npm test
      env:
        CI:            true

  build-osx:
    runs-on:           macOS-latest
    strategy:
      matrix:
        #node-version: [8.x, 10.x, 12.x]
        node-version:  [12.x]
    steps:
    - uses:            actions/checkout@v1
    - name:            Use Node.js ${{ matrix.node-version }}
      uses:            actions/setup-node@v1
      with:
        node-version:  ${{ matrix.node-version }}
    - name:            npm install, build, and test
      run:             |
        git submodule sync
        git submodule update --init --recursive
        npm install
        npm link src/nodefony
        npm run build --if-present
        nodefony start
        sleep 60;
        npm test
      env:
        CI:            true

  build-windows:
    runs-on:           windows-latest
    strategy:
      matrix:
        #node-version: [8.x, 10.x, 12.x]
        node-version:  [12.x]
    steps:
    - uses:            actions/checkout@v1
    - name:            Use Node.js ${{ matrix.node-version }}
      uses:            actions/setup-node@v1
      with:
        node-version:  ${{ matrix.node-version }}
    - name:            npm install, build, and test
      shell:           bash
      run:             |
        git submodule sync
        git submodule update --init --recursive
        npm install
        npm link src/nodefony
        npm run build --if-present
        nodefony start
        sleep 60;
        npm test
      env:
        CI:            true
