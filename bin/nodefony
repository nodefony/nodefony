#!/usr/bin/env node
var path = require("path");
var arg = process.argv.slice(2)[0];


switch ( arg ){
	case "app" :
		try {
			var autoloader = require("..", "src", "nodefony", "core", "autoloader");
			var config = yaml.load( fs.readFileSync( path.resolve( "app", "config", "config.yml"), 'utf8' ) );
			return process.stdout.write( config.App.projectName );
		}catch(e){
			return process.stdout.write( "nodefony" );
		}
	case "version" :
		try {
			var nodefony_version = require( path.resolve( "package.json") ).version;
			return process.stdout.write( nodefony_version );
		}catch(e){
			throw e ;
		}
	case "config" :
		var autoloader = require("..", "src", "nodefony", "core", "autoloader");
		var config = yaml.load( fs.readFileSync( path.resolve( "app", "config", "config.yml"), 'utf8' ) );
		return  process.stdout.write( JSON.stringify(config, null, '\t') );
	case "check-version" :
		const semver = require('semver');
		var nodefony_version = require( path.resolve( "package.json") ).version;
		var res = semver.valid(nodefony_versionn);
		if ( res ){
				return  process.stdout.write(res) ;
		}
		throw new Error ("Not valid version : " + nodefony_version +" check  http://semver.org ");
	default :
		throw new Error("Bad command line ");
}
