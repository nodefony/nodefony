######################
#  NODEFONY APP CONFIG
#
#   @here You can OVERRIDE all Bundles Configurations
#
name :                           AppBundle
version:                         1.0.0
locale :                         en_en
App:
  projectName:                   "nodefony"
  projectYear:                   2017
  locale:                        "en_en"
  authorName:                    "admin"
  authorMail:                    "admin@nodefony.com"

lang:
  en_en:                         "english"
  fr_fr:                         "franÃ§ais"

##################################
#  WATCHERS
#
#    watchers Listen to changes, deletion, renaming of files and directories
#    of different components
#
#    For watch all components
#
#      watch:                    true
#    or
#      watch:
#        controller:             true
#        config:                 true        # only  routing.yml
#        views:                  true
#        translations:           true
#        webpack:                true
#
watch:                           true

##################################
#  OVERRIDE BUNDLE MONITORING
#
#    see MONITORING BUNDLE config for more options
#
#
monitoringBundle:
  debugBar:                      true
  forceDebugBarProd:             false
  storage:
    active:                      false
    requests:                    orm

##################################
#  OVERRIDE  BUNDLE SEQUELIZE
#
#       @see SEQUELIZE BUNDLE config for more options
#       @more options http://docs.sequelizejs.com/class/lib/sequelize.js~Sequelize.html
#
#       Nodefony Database Management
#        dialect :               'mysql'|'sqlite'|'postgres'|'mssql'
#
#       By default nodefony create  connector name nodefony ( driver sqlite )
#       for manage Sessions / Users
#
#       For mysql/mariadb create database nodefony before
#       Mysql > CREATE DATABASE nodefony;
#
#       Here create new databases connectors
#       and use for sync connectors :
#       make sequelize
#
sequelizeBundle:
  debug:                         false
#  connectors:
#    nodefony:
#      driver:                   mysql
#      dbname:                   'nodefony'
#      username:                 'nodefony'
#      password:                 'nodefony'
#      options:
#        dialect:                mysql
#        host:                   localhost
#        port:                   '3306'


##################################
#  OVERRIDE  BUNDLE MONGO
#
#       @see MONGO BUNDLE config for more options
#       @more options http://docs.sequelizejs.com/class/lib/sequelize.js~Sequelize.html
#
#
#       By default nodefony create  connector name nodefony
#       for manage Sessions / Users
#
#
#mongoBundle:
#  mongoose:
#    debug:                      false
#    connectors:
#      nodefony:
#        host:                   "127.0.0.1"
#        port:                   32772
#        dbname:                 "nodefony"
#        settings:
#          user:                 "nodefony"
#          pass:                 "nodefony"
#          authSource:           "admin"
#          reconnectTries:       1000
#          reconnectInterval:    10
#          autoReconnect:        true

############################
#  OVERRIDE BUNDLE HTTP
#
#       see HTTP BUNDLE config for more options
#
#       query string parser
#       form-data multipart parser
#       upload
#       statics files
#       session
#       http server
#       https server
#       upload
#       websocket server
#       websocket secure server
#       sockjs dev server ( webpack dev server like WDS)
#
#
httpBundle:
  # For more options parser formidable @see : https://github.com/felixge/node-formidable
  request:
    uploadDir:                   "/tmp"                        # temporing file upload system
    maxFileSize:                 2097152                        # In Bytes
    maxFieldsSize:               2097152                       # 2MB
    maxFields:                   1000                          # 0 for unlimited
  # For more options parser QS @see : https://github.com/ljharb/qs
  queryString:
    parameterLimit:              1000
    delimiter:                   "&"
  # Server @see :                https://nodejs.org/dist/latest-v8.x/docs/api/http.html#http_class_http_server
  http:
    responseTimeout:             40000
  https:
    responseTimeout:             40000
  sockjs:
      overlay:                   true
      hot:                       true
      protocol:                  https
      websocket:                 true
  statics:
    defaultOptions:
      cacheControl :             true
      maxAge:                    0
    web:
      path:                      "web"
      options:
        maxAge:                  0                             #30*24*60*60*1000
  session:
    start:                       false                 # false || true || Name Session Context
    name:                        "nodefony"
    handler:                     orm                   # files | orm | memcached    => "nodefony.session.storage"
    #save_path:                  "./tmp/sessions"      # for session.storage.files only
    use_strict_mode:             true
    gc_probability:              1
    gc_divisor:                  100
    gc_maxlifetime:              1440
    use_cookies:                 true
    use_only_cookies:            true
    referer_check:               false
    cookie:
      maxAge:                    0                     # like cookie_lifetime php  =>seconde
      secure:                    false                 # Set true for https site only see https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/Set-Cookie
    memcached:
      servers:
        nodefony:
          location:              127.0.0.1
          port:                  11211
          weight:                1

#######################
#  OVERRIDE SECURITY BUNDLE
#
#   HEADERS SECURITY
#
#    Content-Security-Policy
#    Strict-Transport-Security
#     ...
#    Manage and Clean hsts in chrome
#     chrome://net-internals/#hsts
#
securityBundle:
  headers:
    http:
     #Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
     X-Frame-Options:            "SAMEORIGIN"
     X-Content-Type-Options:     "nosniff"
    https           :
     #Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
     X-Frame-Options:            "SAMEORIGIN"
     X-Content-Type-Options:     "nosniff"

################################
#  OVERRIDE BUNDLE REALTIME
#
#       see REALTIME BUNDLE config for more options
#
#
realTimeBundle:
  services:
    monitoring:
      type:                      tcp
      port:                      1318
      domain:                    localhost
