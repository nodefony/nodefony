#!/usr/bin/env node
const path = require("path");
const asciify = require('asciify');
const fs = require("fs");

// --expose-gc --trace-gc --log-gc --trace-gc-verbose
//--debug

///*var profiler = require('v8-profiler');
//var heapdump = require('heapdump');
//heapdump.writeSnapshot(process.cwd()+'/tmp/' + Date.now() + '.heapsnapshot', function(err, filename) {
//	console.log('heapdump written to', filename);
//});*/

/*
 *
 * NODEFONY FRAMEWORK  
 *
 *	DEVELOPPEMENT
 *
 */

var autoloader = null ;
// AUTOLOADER
try {
	autoloader = require("nodefony");
}catch(e){
	autoloader = require(".", "src", "nodefony", "core", "autoloader");	
}
autoloader.load( path.resolve(".", "app", "appKernel.js" ) );

var links = path.resolve( ".", "tmp", "assestLink" ) ;
if ( fs.existsSync( links) ){
	fs.rmdirSync( links );	
}

var environment = "dev" ;
var debug = true ;
if ( process.env["NODEFONY_DEBUG"] ){
	debug = process.env["NODEFONY_DEBUG"] ;
}

process.env["MODE_START"] = "NODEFONY_DEV" ;

asciify("      NODEFONY", {font:'standard'}, function(err, res){
	console.log('\033[31m'+res+'\033[0m'); 
	// KERNEL 
	var kernel = new nodefony.appKernel("SERVER", environment, debug, autoloader, {
		node_start:process.env["MODE_START"]
	});
	autoloader.setKernel(kernel);
	return kernel ;
});
