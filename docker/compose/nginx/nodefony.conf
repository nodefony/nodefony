map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}




server {
	listen 80;

	server_name docker.nodefony.nginx;

	set  $via  "NGINX";
	if ($http_via) {
		set $via  "$http_via, $via";
	}

	location ~ \.(js|css|png|ico|jpg|jpeg|gif|ttf|font|map|woff.?|twig|txt|html|xml|json|mp3|wav|wmv|avi|mpg|mpeg|mp4|webm|swf|flv)$ {
		access_log off;
		root /nodefony/web;
		expires 7d;
	}

	location / {
		root /nodefony/web ;
		proxy_pass http://docker.nodefony:5151;
		proxy_http_version 1.1;
		proxy_pass_header Server;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Port 5151;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         	proxy_set_header  Via  $via;

		proxy_cache_bypass $http_upgrade;
	}
}

server {
	listen	443 ssl;

	server_name docker.nodefony.nginx;

	ssl_certificate  /certificates/server/fullchain.pem;
        ssl_certificate_key /certificates/server/privkey.pem;
        ssl_trusted_certificate /certificates/server/fullchain.pem;

	set  $via  "NGINX";
        if ($http_via) {
                set $via  "$http_via, $via";
        }

	location / {
		root /nodefony/web ;
		proxy_pass https://docker.nodefony:5152;
		proxy_http_version 1.1;
		proxy_pass_header Server;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;

		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Port 5152 ;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header  Via  $via;

		proxy_cache_bypass $http_upgrade;
	}

	location ~ \.(js|css|png|ico|jpg|jpeg|gif|ttf|font|map|woff.?|twig|txt|html|xml|json|mp3|wav|wmv|avi|mpg|mpeg|mp4|webm|swf|flv)$ {
		root /nodefony/web;
		expires 7d;
		access_log off;
	}

}

