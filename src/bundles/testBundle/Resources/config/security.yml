# Security
security:
    providers:
      chain_provider:
        chain:
          providers:                                [in_memory, nodefony]
      in_memory:
        memory:
          users:
            anonymous: { username:                  "anonymous"  }
    firewalls:
        test-anonymous:
          provider:                                 nodefony
          pattern:                                  ^/
          anonymous:                                ~
          #stateless:                               ~
          #passport:
          #  strategy:
          #    name:                                local
          #    usernameField:                       'email'
          #    passwordField:                       'passwd'
        # main
        test-main-area:
            pattern:                                ^/test/firewall/anonymous
            anonymous:                              ~
            crossDomain:
                allow-origin:
                  - "http://mycrossdomain.com:5151"
                  - "ws://mycrossdomain.com:5151"
                Access-Control:
                  Access-Control-Allow-Methods:
                   - GET
                  Access-Control-Allow-Headers:
                    - Authorization
                    - X-CSRF-Token
                    - X-Requested-With
                    - Accept
                    - Accept-Version
                    - Content-Length
                    - Content-MD5
                    - Content-Type
                    - Date
                  Access-Control-Expose-Headers:
                   - WWW-Authenticate
                   - X-Json
                  Access-Control-Allow-Credentials: true
                  Access-Control-Max-Age:           10

        # passport-basic  BASIC SECURITY AREA
        test-basic-area:
            pattern:                                ^/test/firewall/basic
            provider:                               nodefony
            form_login:
              default_target_path:                  /
              check_path:                           /test/firewall/basic
            passport-basic:
              realm:                                "nodefony"
            logout:                                 /test/logout

        # passport-digest  DIGEST SECURITY AREA
        test-digest-area:
            pattern:                                ^/test/firewall/digest
            provider:                               nodefony
            form_login:
              default_target_path:                  /
              check_path:                           /test/firewall/digest
            passport-digest:
              realm:                                "nodefony"
            logout:                                 /test/logout

        # passport-local  LOCAL SECURITY AREA
        test-local-area:
            pattern:                                ^/test/firewall/local
            provider:                               nodefony
            form_login:
              login_path:                           /test/login
              default_target_path:                  /
              check_path:                           /test/firewall/local
            passport-local:
              usernameField:                        'email'
              passwordField:                        'passwd'
            logout:                                 /test/logout
            context:                                local
            redirectHttps:                          false
            crossDomain:
                allow-origin:
                  - "http://mycrossdomain.com:5151"
                  - "ws://mycrossdomain.com:5151"
                Access-Control:
                  Access-Control-Allow-Methods:
                   - GET
                  Access-Control-Allow-Headers:
                    - Authorization
                    - X-CSRF-Token
                    - X-Requested-With
                    - Accept
                    - Accept-Version
                    - Content-Length
                    - Content-MD5
                    - Content-Type
                    - Date
                  Access-Control-Expose-Headers:
                   - WWW-Authenticate
                   - X-Json
                  Access-Control-Allow-Credentials: true
                  Access-Control-Max-Age:           10

        # REST API STATELESS
        test-api-area:
            pattern:                                ^/test/firewall/api
            stateless:                              true
            context:                                api

        #
        test-cors-area:
            pattern:                                ^/test/firewall/cors
            crossDomain:
              allow-origin:
                - "http://mycrossdomain.com:5151"
                - "ws://mycrossdomain.com:5151"
              Access-Control:
                Access-Control-Allow-Methods:
                 - GET
                Access-Control-Allow-Headers:
                  - Authorization
                  - X-CSRF-Token
                  - X-Requested-With
                  - Accept
                  - Accept-Version
                  - Content-Length
                  - Content-MD5
                  - Content-Type
                  - Date
                Access-Control-Expose-Headers:
                 - WWW-Authenticate
                 - X-Json
                Access-Control-Allow-Credentials:   true
                Access-Control-Max-Age:             10

        # passport-local  DEMO SECURITY AREA
        #  Management credentials :                 https://console.developers.google.com/apis
        # google_area:
        #    pattern:                               ^/auth/google
        #    provider:                              nodefony
        #    form_login:
        #      default_target_path:                 /
        #      check_path:                          /auth/google
        #    passport-google-oauth20:
        #      clientID:                            "clientID"
        #      clientSecret:                        "clientSecret"
        #      callbackURL:                         "https://nodefony.com/auth/google/callback"
        #      scopes:                              ["profile","email"]
        #    logout:                                /logout
        #    context:                               google
        #    redirectHttps:                         true
        #    crossDomain:
        #        allow-origin:
        #          google:                          accounts.google.com
        #        Access-Control:
        #          Access-Control-Allow-Methods:    "GET, POST, PUT, DELETE, OPTIONS"
        #          Access-Control-Allow-Headers:    "ETag, Authorization,  X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date"
        #          Access-Control-Allow-Credentials: true
        #          Access-Control-Expose-Headers:   "WWW-Authenticate ,X-Json"
        #          Access-Control-Max-Age:          10


        # passport-github2  DEMO SECURITY AREA
        #github_area:
        #    pattern:                               ^/auth/github
        #    provider:                              nodefony
        #    form_login:
        #      default_target_path:                 /
        #      check_path:                          /auth/github
        #    passport-github2:
        #      clientID:                            "clientID"
        #      clientSecret:                        "clientSecret"
        #      callbackURL:                         "https://nodefony.com/auth/github/callback"
        #      scopes:                              [ "user:email" ]
        #    logout:                                /logout
        #    context:                               github
        #    redirectHttps:                         true
        #    crossDomain:
        #        allow-origin:
        #          github:                          github.com
        #        Access-Control:
        #          Access-Control-Allow-Methods:    "GET, POST, PUT, DELETE, OPTIONS"
        #          Access-Control-Allow-Headers:    "ETag, Authorization,  X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date"
        #          Access-Control-Allow-Credentials: true
        #          Access-Control-Expose-Headers:   "WWW-Authenticate ,X-Json"
        #          Access-Control-Max-Age:          10


        # passport-ldapauth  LDAP DEMO SECURITY AREA
        #   CHECK ./node_modules/.bin/ldapjs-search   -u ldap://ldap-server.com -b "dc=object,dc=com" "uid=user"
        #
        #ldap_area:
        #         pattern:                          ^/
        #         provider:                         nodefony
        #         form_login:
        #           login_path:                     /login/ldap
        #           default_target_path:            /demo
        #         passport-ldapauth:
        #           server:
        #             url:                          'ldap://ldad-server.com'
        #             searchBase:                   'dc=nodefony,dc=com'
        #             searchFilter:                 '(uid={{username}})'
        #           usernameField:                  'email'
        #           passwordField:                  'passwd'
        #           profile_wrapper:
        #             username:                     "profile.uid"
        #             name:                         "profile.sn"
        #             surname:                      "profile.givenName"
        #             email:                        "profile.mail"
        #             displayName:                  "profile.cn"
        #         logout:                           /logout
        #         context:                          documentation
