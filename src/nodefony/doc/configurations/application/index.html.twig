<div class="page-header">
  <h1>Application Configuration</h1>
  <p>
    Bundle Application is a special bundle in app directory you can find a 'config' directory
    <br>

    <h2 >
      You can see here :</h2>

    <p>
      <ul>
        <li>
          <a href="#global_application">Goblal Configuration</a>
        </li>
        <li>
          <a href="#routing_application">Routing Configuration</a>
        </li>
        <li>
          <a href="#firewall_application">Firewall Configuration</a>
        </li>
        <li>
          <a href="#webpack">Webpack Configurations</a>
        </li>
        <li>
          <a href="#override">Override Configuration</a>
        </li>
      </ul>
      <p>

        <p></div>

        <h2>Location configurations in File System
          <span class="badge">Directory</span></h2>
        <div class="doc2">
          Location :
          <code>./app/config</code>
          <pre>
$ ls -l ./app/config
total 48
-rw-r--r--  1 cci  staff  5952 15 nov 11:35 config.yml
-rw-r--r--  1 cci  staff   138 23 oct 09:51 routing.js
-rw-r--r--  1 cci  staff   411  2 nov 09:41 security.yml
-rw-r--r--  1 cci  staff    21 14 nov 18:20 services.js
drwxr-xr-x  4 cci  staff   136  2 nov 09:41 webpack
-rw-r--r--  1 cci  staff  2140  2 nov 09:41 webpack.config.js

app/config/
├── config.yml
├── routing.js
├── security.yml
├── services.js
├── webpack
│   ├── webpack.dev.config.js
│   └── webpack.prod.config.js
└── webpack.config.js

</pre>
        </div>

        <h2 id="global_application">Goblal Configuration
          <span class="badge">File</span>
        </h2>

        <div class="doc2">

          <div class="panel panel-default">
            <!-- Default panel contents -->
            <div class="panel-heading">
              Application Global Configuration
            </div>
            <div class="panel-body">

              <div class="doc3">
                <div class="alert alert-info" role="alert">
                  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                  Application is a Bundle with special comportement
                  <br>
                  This file override configuration of multiple Third-Party Bundles
                </div>
              </div>

              Location :
              <code>./app/config/config.yml</code>
              <pre>
######################
#  nodefony app config
#
#   @here you can override all bundles configurations
#
name :                           appbundle
version:                         1.0.0
locale :                         en_en
app:
  projectyear:                   2017
  locale:                        "en_en"
  authorname:                    "admin"
  authormail:                    "admin@nodefony.com"

lang:
  en_en:                         "english"
  fr_fr:                         "français"

##################################
#  watchers
#
#    watchers listen to changes, deletion, renaming of files and directories
#    of different components
#
#    for watch all components
#
#      watch:                    true
#    or
#      watch:
#        controller:             true
#        config:                 true        # only  routing.yml
#        views:                  true
#        translations:           true
#        webpack:                true
#
watch:                           true

##################################
#  override bundle monitoring
#
#    see monitoring bundle config for more options
#
#
monitoring-bundle:
  debugbar:                      true
  forcedebugbarprod:             false
  storage:
    active:                      false
    requests:                    orm

##################################
#  override  bundle sequelize
#
#       @see sequelize bundle config for more options
#       @more options http://docs.sequelizejs.com/class/lib/sequelize.js~sequelize.html
#
#       nodefony database management
#        dialect :               'mysql'|'sqlite'|'postgres'|'mssql'
#
#       by default nodefony create  connector name nodefony ( driver sqlite )
#       for manage sessions / users / requests
#
#       for mysql/mariadb create database nodefony before
#       mysql > create database nodefony;
#
#       here create new databases connectors
#       and use for sync connectors :
#       nodefony sequelize:sync
#
sequelizebundle:
  debug:                         false
#  connectors:
#    nodefony:
#      driver:                   mysql
#      dbname:                   'nodefony'
#      username:                 'nodefony'
#      password:                 'nodefony'
#      options:
#        dialect:                mysql
#        host:                   localhost
#        port:                   '3306'

############################
#  override bundle http
#
#       see http bundle config for more options
#
#       query string parser
#       form-data multipart parser
#       upload
#       statics files
#       session
#       http server
#       https server
#       upload
#       websocket server
#       websocket secure server
#       sockjs dev server ( webpack dev server like wds)
#
#
httpbundle:
  # for more options parser formidable @see : https://github.com/felixge/node-formidable
  request:
    uploaddir:                   "/tmp"                        # temporing file upload system
    maxfilesize:                 2097152                        # in bytes
    maxfieldssize:               2097152                       # 2mb
    maxfields:                   1000                          # 0 for unlimited
  # for more options parser qs @see : https://github.com/ljharb/qs
  querystring:
    parameterlimit:              1000
    delimiter:                   "&"
  # server @see :                https://nodejs.org/dist/latest-v8.x/docs/api/http.html#http_class_http_server
  http:
    responsetimeout:             40000
  https:
    responsetimeout:             40000
  sockjs:
      overlay:                   true
      hot:                       true
      protocol:                  https
      websocket:                 true
  statics:
    defaultoptions:
      cachecontrol :             true
      maxage:                    0
    web:
      path:                      "web"
      options:
        maxage:                  0                             #30*24*60*60*1000
  session:
    start:                       false                 # false || true || name session context
    name:                        "nodefony"
    handler:                     sequelize             # files | sequelize | memcached  "nodefony.session.storage"
    #save_path:                  "./tmp/sessions"      # for session.storage.files only
    use_strict_mode:             true
    gc_probability:              1
    gc_divisor:                  100
    gc_maxlifetime:              1440
    use_cookies:                 true
    use_only_cookies:            true
    referer_check:               false
    cookie:
      maxage:                    0                     # like cookie_lifetime php  =>seconde
      secure:                    false                 # set true for https site only see https://developer.mozilla.org/fr/docs/web/http/headers/set-cookie
    memcached:
      servers:
        nodefony:
          location:              127.0.0.1
          port:                  11211
          weight:                1

#######################
#  override security bundle
#
#   headers security
#
#    content-security-policy
#    strict-transport-security
#     ...
#    manage and clean hsts in chrome
#     chrome://net-internals/#hsts
#
securitybundle:
  headers:
    http:
     #strict-transport-security: "max-age=31536000; includesubdomains; preload"
     x-frame-options:            "sameorigin"
     x-content-type-options:     "nosniff"
    https           :
     #strict-transport-security: "max-age=31536000; includesubdomains; preload"
     x-frame-options:            "sameorigin"
     x-content-type-options:     "nosniff"

################################
#  override bundle realtime
#
#       see realtime bundle config for more options
#
#
realtimebundle:
  services:
    monitoring:
      type:                      tcp
      port:                      1318
      domain:                    localhost

	  </pre>
            </div>

            <table class="table">
              <thead>
                <th class="config-parameters">Parameters</th>
                <th>Description</th>
                <th>Data Type</th>
                <th>Example /
                  <span class="badge">Default</span>
                </th>
              </thead>
              <tbody>
                <tr>
                  <td class="config-parameters">name</td>
                  <td>Bundle Name</td>
                  <td>String</td>
                  <td>AppBundle</td>
                </tr>
                <tr>
                  <td class="config-parameters">version</td>
                  <td>Bundle Version
                  </td>
                  <td>String</td>
                  <td>1.0</td>
                </tr>
                <tr>
                  <td class="config-parameters">locale</td>
                  <td>I18n Bundle locale</td>
                  <td>String</td>
                  <td>en_en</td>
                </tr>

                <tr>
                  <td class="config-parameters">App.projectName</td>
                  <td>
                    Name of Application (project)
                  </td>
                  <td>String</td>
                  <td></span></td>
              </tr>
              <tr>
                <td class="config-parameters">App.projectYear</td>
                <td>
                  Year Application
                </td>
                <td>String</td>
                <td></td>
              </tr>
              <tr>
                <td class="config-parameters">App.locale</td>
                <td>
                  Application locale i18n
                </td>
                <td>String</td>
                <td>
                  <span class="badge">en_en</span></td>
              </tr>
              <tr>
                <td class="config-parameters">App.authorName</td>
                <td>Author
                </td>
                <td>String</td>
                <td></td>
              </tr>
              <tr>
                <td class="config-parameters">App.authorMail</td>
                <td>
                  Author email
                </td>
                <td>String</td>
                <td></td>
              </tr>
              <tr>
                <td class="config-parameters">lang</td>
                <td>
                  All langs enable in Application
                </td>
                <td>Object</td>
                <td></td>
              </tr>

            </tbody>
          </table>
        </div>
      </div>

      <h2 id="routing_application">Application Routing Configuration
        <span class="badge">File</span>
      </h2>
      <div class="doc2">
        <div class="panel panel-default">
          <!-- Default panel contents -->
          <div class="panel-heading">
            Application Routing Configuration
          </div>
          <div class="panel-body">
            <p>Location :
              <code>./app/config/routing.js</code>
            </p>
            <pre>
module.exports = {
  // home
  home: {
    pattern: "/",
    defaults: {
      controller: "appbundle:app:index"
    }
  }
};
	  </pre>
          </div>
        </div>
      </div>

      <h2 id="firewall_application">Application Firewall Configuration
        <span class="badge">File</span>
      </h2>

      <div class="doc2">
        <div class="panel panel-default">
          <!-- Default panel contents -->
          <div class="panel-heading">
            Application Firewall Configuration
          </div>
          <div class="panel-body">
            <p>Location :
              <code>./app/config/security.yml</code>
            </p>
            <pre>
# security
security:

  #
  #  firewall strategy
  #  when change security context (multi firewalls areas)
  #
  session_fixation_strategy:  migrate  # strategy can be : none, migrate, invalidate

  #
  #  firewall  areas
  #
  firewalls: ~

  #
  #  firewall  provider
  #
  providers: ~
	  </pre>
          </div>
        </div>
      </div>

      <h2 id="webpack">Configuration Webpack
        <span class="badge">FILE</span>
      </h2>

      <div class="doc2">
        <div class="panel panel-default">
          <!-- Default panel contents -->
          <div class="panel-heading">
            Bundle Webpack Configuration
          </div>
          <div class="panel-body">
            <p>Location :
              <code>./app/config/webpack.config.js</code>
            </p>
            <pre>
const path = require("path");
const extracttextplugincss = require('extract-text-webpack-plugin');
const public = path.resolve(__dirname, "..", "resources", "public");
const bundlename = path.basename(path.resolve(__dirname, ".."));
const webpackmerge = require('webpack-merge');

let config = null;
if (kernel.environment === "dev") {
  config = require("./webpack/webpack.dev.config.js");
} else {
  config = require("./webpack/webpack.prod.config.js");
}

module.exports = webpackmerge(config, {
  context: public,
  target: "web",
  //watch: false,
  entry: {
    app: ["./js/app.js"]
  },
  output: {
    path: public,
    filename: "./assets/js/[name].js",
    library: "[name]",
    librarytarget: "umd"
  },
  externals: {},
  resolve: {},
  module: {
    rules: [{
      // babel transcode
      test: new regexp("\.es6$|\.js$"),
      exclude: new regexp("node_modules"),
      use: [{
        loader: 'babel-loader',
        options: {
          presets: ['env']
        }
      }]
    }, {
      // css extract
      test: new regexp("\.css$"),
      use: extracttextplugincss.extract({
        use: 'css-loader'
      })
    }, {
      // sass
      test: new regexp(".scss$"),
      use: [{
        loader: 'style-loader'
      }, {
        loader: 'css-loader'
      }, {
        loader: 'sass-loader'
      }]
    }, {
      test: new regexp("\.less$"),
      use: extracttextplugincss.extract({
        use: [
          "raw-loader",
          {
            loader: 'less-loader',
            options: {
              //strictmath: true,
              //noiecompat: true
            }
          }
        ]
      })
    }, {
      // fonts
      test: new regexp("\.(eot|woff2?|svg|ttf)([\?]?.*)$"),
      use: 'file-loader?name=[name].[ext]&publicpath=/' + bundlename + '&outputpath=/assets/fonts/',
    }, {
      // images
      test: new regexp("\.(jpg|png|gif)$"),
      use: 'file-loader?name=[name].[ext]&publicpath=/' + bundlename + '&outputpath=/assets/images/'
    }]
  },
  plugins: [
    new extracttextplugincss({
      filename: "./assets/css/[name].css",
    })
  ]
});
		  </pre>
            <p>Location :
              <code>./app/config/webpack/webpack.dev.config.js</code>
            </p>
            <p>
              App add HRM config ( Hot Module Replacement )
            </p>
            <pre>
const webpackdevclient = "webpack-dev-server/client?https://" + kernel.hosthttps + "/";
module.exports = {
  entry: {
    app: [webpackdevclient]
  },
  devtool: "source-map",
  plugins: []
};
		  </pre>
            <p>Location :
              <code>./app/config/webpack/webpack.prod.config.js</code>
            </p>
            <pre>
const optimizecssassetsplugin = require('optimize-css-assets-webpack-plugin');
const uglifyjsplugin = require('uglifyjs-webpack-plugin');

module.exports = {
  watch: false,
  plugins: [
    new optimizecssassetsplugin({
      cssprocessoroptions: {
        discardcomments: {
          removeall: true
        }
      },
      canprint: true
    }),
    new uglifyjsplugin({
      uglifyoptions: {
        warnings: true,
        compress: true
      },
      parallel: true
    })
  ]
};
		  </pre>
          </div>
        </div>
      </div>

      <h2 id="override">Override GLOBAL CONFIGURATION from Third-Party Bundles :</h2>
      <div class="doc2">
        <p>
          To override global configuration from Third-Party Bundles you can write in config.yml (root yaml node) the full name of bundle
        </p>
        <div class="alert  alert-info" role="alert">
          WARNING to the order Registration bundles
          <br>
          If you want override a config of Third-Party bundle, this one must be register before the bundle config file who make the override
        </div>
        Example
        <code>./app/config/config.yml
        </code>
        <pre>
....

##################################
#
#       override  bundle sequelize
#
#       see sequelize bundle config for more options
#
#       nodefony database management
#
#       by default nodefony create  connector name nodefony ( driver sqlite )
#       for manage sessions / user
#
#
#       here create new databases connectors ( example mysql)
#
#
sequelizebundle:
  debug:        false
  connectors:
    nodefony:
      driver:          mysql
      dbname:          'nodefony'
      username:        'username'
      password:        'password'
      options:
        dialect:       mysql
        host:          localhost
        port:          '3306'


#
#       override bundle monitoring
#
#       see monitoring bundle config for more options
#
#
<strong>monitoring-bundle:</strong>
debugbar:                     true
#storage:                      false

....


// started nodefony syslog :
mon oct 03 2016 17:10:41 warning bundle app  :  overriding  config bundle  : sequelize
mon oct 03 2016 17:10:41 warning bundle app  :  overriding  config bundle  : monitoring
		</pre>

      </div>
