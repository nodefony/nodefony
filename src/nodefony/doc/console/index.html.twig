{{trans_default_domain("doc")}}

<h1> {{ "COMMAND-LINE INTERFACE (CLI)" | trans() }}</h1>


<h2>
	Framework cli (command-line interface)
</h2>


<pre><code class="hljs console" >$ nodefony -h

                            _           __                                         _                    _
        _ __     ___     __| |   ___   / _|   ___    _ __    _   _           ___  | |_    __ _   _ __  | |_    ___   _ __
       | '_ \   / _ \   / _` |  / _ \ | |_   / _ \  | '_ \  | | | |  _____  / __| | __|  / _` | | '__| | __|  / _ \ | '__|
       | | | | | (_) | | (_| | |  __/ |  _| | (_) | | | | | | |_| | |_____| \__ \ | |_  | (_| | | |    | |_  |  __/ | |
       |_| |_|  \___/   \__,_|  \___| |_|    \___/  |_| |_|  \__, |         |___/  \__|  \__,_| |_|     \__|  \___| |_|
                                                             |___/

      Version : 1.0.0 Platform : darwin Process : nodefony-starter PID : 26214

      KERNEL CONSOLE Cluster : master Environment : prod Debug :false

Usage: nodefony [options] <command:task:action> [args...]
                [options] <command:action> [args...]
                [options] <action> [args...]

Options:
  -V, --version       output the version number
  -d, --debug         Nodefony debug
  -h, --help          Nodefony help
  -v, --version       Nodefony version
  -f, --force         Force disable interactive mode
  -i, --interactive   Nodefony cli Interactive Mode
  -j, --json          Nodefony json response
  -V, --version       output the version number
  -h, --help          output usage information

Servers
         dev                                                     Run Nodefony Development Server
         preprod                                                 Run Nodefony Preprod Server ( Usefull to check Clusters Node )
         prod                                                    Run Nodefony Production Server ( PM2 mode )
PM2 Process Manager 2
         stop [name]                                             Stop Production Project
         reload [name]                                           Reload Production Project
         delete [name]                                           Delete Production Project from PM2 management
         restart [name]                                          Restart Production Project
         list                                                    List all Production Projects
         kill                                                    Kill PM2 daemon
         logs [name] [nblines]                                   Stream pm2 logs  [name] is project name  and [nblines] to show
         clean-log                                               Remove logs
nodefony
         create [-i] name [path]                                 Create New Nodefony Project
         build                                                   Build Nodefony Framewok
         rebuild                                                 Rebuild Nodefony Framewok (Recompilation when node version change )
         install                                                 Install Nodefony Project
         certificates                                            Generate HTTPS Certificates  'Change default openssl configuration in config/openssl'
         listDependencies                                        List Project dependencies
         outdated                                                List Project dependencies outdated
         version                                                 Get Project Version
Bundles
  framework
         generate:bundle name [path]                             Generate a nodefony Bundle  Example : nodefony generate:bundle name ./src/bundles
         generate:controller [-i] name [bundle]                  Generate a Bundle Controller  Example : nodefony generate:controller defaultController demo
         generate:service [-i]                                   Generate Service
         generate:entity [-i] orm                                Generate ORM Entity
         generate:nginx [-i]                                     Generate Nginx Minimal Configuration File as a reverse proxy in front of Nodefony
         generate:haproxy [-i]                                   Generate Haproxy Minimal Configuration File as a reverse proxy in front of Nodefony
         generate:letsencrypt [-i]                               Generate Let's Encrypt Webroot Configuration
         router:display:routes [routeName]                       Display all routes or route  Example : nodefony router:display:route home
         router:display:match uri                                Get route who match uri Example : nodefony router:display:match /nodefony
         webpack:dump                                            Compile webpack for all bundles
  sequelize
         sequelize:sync [force]                                  Synchronize All Entities. [force] to delete table if exist  example : nodefony sequelize:sync force
         sequelize:fixtures:load                                 Load fixtures in database
         sequelize:query:sql connectionName 'SQL'                Query sql in database connection  example : nodefony  sequelize:query:sql nodefony 'select * from users'
         sequelize:entity:findAll entity                         Query findAll ENTITY
         sequelize:generate:entity name bundle connector         Generate Sequelize Entity
  unittests
         unitest:list:all                                        List all unit tests
         unitest:list:bundle bundleName                          List all bundle unit tests
         unitest:launch:all                                      Launch all tests Example : nodefony unitest:launch:all
         unitest:launch:bundle bundleName [testfile]             Launch bundle tests Example: nodefony unitest:launch:bundle demoBundle responseTest.js

</code></pre>
