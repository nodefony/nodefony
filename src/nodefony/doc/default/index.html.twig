{{trans_default_domain("doc")}}

<a href="https://github.com/nodefony/nodefony">
  <img style="position: fixed; top: 51px; right: 0; border: 0;z-index:8000" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub">
</a>

<center>
  <h1>
    Nodefony Documentation
  </h1>
  <h2>
    <span class="label label-success ">
      {{version}}
    </span>
  </h2>
</center>

<hr>

<div class="container">
  <div class="row mt-3">
    <div class="col-md-6">
      <div class="card card-info">
        <div class="card-header">{{ "begin" | trans() }}
          <span class="label label-success pull-right">
            {{version}}
          </span>
        </div>
        <div class="card-body" style="overflow: auto;">
          <ul>
            <li>
              <a href="{{ path('documentation-section',{section:'installation', version:version, bundle:bundle })}}">
                {{"installation" | trans() | capitalize() }}
              </a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'started', version:version, bundle:bundle })}}">
                {{"begin" | trans() | capitalize() }}
              </a>
            </li>
            <li>
              <a href="{{ path('documentation-version',{version:version, bundle:'app' })}}">
                {{"Application" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{version:version ,section:'configurations', bundle:bundle })}}">
                {{"configurations" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'running', version:version, bundle:bundle })}}">
                {{"running" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'helloWord', version:version, bundle:bundle })}}">
                Hello Word
              </a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'routing', version:version, bundle:'framework' })}}">
                {{"Routing" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'controller', version:version, bundle:'framework' })}}">
                {{"controller" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'view', version:version, bundle:'framework' })}}">
                {{"view" | trans() | capitalize() }}
              </a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'console', version:version, bundle:bundle })}}">
                {{"console" | trans() | capitalize() }}</a>
            </li>
          </ul>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card card-info">
        <div class="card-header">{{ "core" | trans() }}
          <span class="label label-success pull-right">
            {{version}}
          </span>
        </div>
        <div class="card-body" style="overflow: auto;">
          <ul>
            <li>
              <a href="{{ path('documentation-section',{section:'architectures', version:version, bundle:bundle })}}">
                {{"Architecture" | trans() | capitalize() }}
              </a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'autoloader', version:version, bundle:bundle })}}">
                {{"Autoloader" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'kernel', version:version, bundle:bundle })}}">
                {{"Kernel" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'bundles', version:version, bundle:bundle })}}">
                {{"Bundles" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'container', version:version, bundle:bundle })}}">
                {{"Services Container" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'context', version:version, bundle:bundle })}}">
                {{"Request context" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'finder', version:version, bundle:bundle })}}">
                {{"Finder" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'fileClass', version:version, bundle:bundle })}}">
                {{"fileClass" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'notifications', version:version, bundle:bundle })}}">
                {{"notificationsCenter" | trans() | capitalize() }}</a>
            </li>
            <li>
              <a href="{{ path('documentation-section',{section:'syslog', version:version, bundle:bundle })}}">
                {{"Syslog" | trans() | capitalize() }}</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  <div class="row mt-3">
    <div class="col-md-6">
      <div class="card card-info">
        <div class="card-header">{{ "Bundles" | trans() }}
        </div>
        <div class="card-body" style="overflow: auto;">
          <ul>
            {% for myBundle in bundles %}
            <li>
              <a href="{{path('documentation-version', {version:myBundle.version, bundle:myBundle.name})}}">
                <strong>{{myBundle.name}}</strong>
                <span class="label label-default pull-right">{{myBundle.version}}</span></a>
            </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card card-info">
        <div class="card-header">{{ "usage" | trans() }}
          <span class="label label-success pull-right">
            {{version}}
          </span>
        </div>
        <div class="card-body" style="overflow: auto;">
          <ul>
            <li>
              <a href="{{ path('documentation-section',{section:'servers', version:version, bundle:'http' })}}">
                {{"servers" | trans() | capitalize() }}
              </a>
            </li>
            <li>
              Front Proxy NGINX
            </li>
            <li>
              Production Mode PM2
            </li>
            <li>
              Statics Files</li>
            <li>
              CDN
            </li>
            <li>
              Sessions</li>
            <li>
              Firewall</li>
            <li>
              Authentication</li>
            <li>
              Orm</li>
            <li>
              <a href="{{ path('documentation-version',{ version:version, bundle:'realTime' })}}">
                {{"realtime" | trans() | capitalize() }}</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  <hr>

  <div class="row m-t-xl">
    <center>
      <h1>
        {{ "begin" | trans() }}
      </h1>
      <small>
        <a href="{{ path('documentation-section',{section:'started', version:version, bundle:bundle })}}">More details</a>
      </small>
      </br>
    </center>

    <h2>NODEFONY INSTALLATION :
      <small>See more
        <a href="{{ path('documentation-section',{section:'installation', version:version, bundle:bundle })}}">( Nodefony installation documentation )
        </a>
      </small>
    </h2>
    <p class="doc2">
      Install Nodefony Globally
    </p>
    <pre class="doc2">
Install with NPM :

$ npm -g install nodefony

Install with yarn :

$ yarn global add nodefony
    </pre>
    <a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions">See Global install How to Prevent Permissions Errors</a>
    <h2>Configurations :
      <small>See more
        <a href="{{ path('documentation-section',{section:'configurations', version:version, bundle:bundle })}}">( Nodefony Configurations documentation )
        </a>
      </small>
    </h2>
    <p class="doc2">

      By defaut NODEFONY bind all servers on loopback ( localhost : 127.0.0.1 )
      </br>

      <ul class="doc3">
        <li>
          domain : localhost
        </li>
        <li>
          http : 5151
        </li>
        <li>
          https: 5152
        </li>
      </ul>
      <p class="doc3">
        If you want change listen port http(s) by defaut or domain
        <small>
          <a href="{{ path('documentation-section',{section:'configurations', version:version, bundle:bundle, queryString:{'subsection':'framework'} })}}">( Configurations framework )
          </a>
        </small><br>
        Change config.yml Location :
        <code>./config/config.yml</code>
      </p>
      <pre class="doc3">
<strong>system:
domain                        : localhost             # nodefony can listen only one domain ( no vhost )  /    [::1] for ipv6 only
domainalias:                                          # domainalias string only <<regexp>>   example ".*\\.nodefony\\.com  ^nodefony\\.eu$ ^.*\\.nodefony\\.eu$"
- "^127.0.0.1$"
httpport                      : 5151
httpsport                     : 5152</strong>
domainCheck                   : true
statics                       : true
security                      : true
realtime                      : true
monitoring                    : true
documentation                 : true
unittest                      : true
locale                        : "en_en"

servers:
http                        : true
https	                : true
ws			        : true
wss			        : true
certificats:
key                       : "config/certificates/server/privkey.pem"
cert                      : "config/certificates/server/fullchain.pem"
ca                        : "config/certificates/ca/nodefony-root-ca.crt.pem"
options:
rejectunauthorized      : false

bundles:
hello                       : "file:src/bundles/hello-bundle"

log:
active                      : true

#
#       assets cdn
#
#       you set cdn with string
#       cdn :   cdn.nodefony.com
#       or
#       cdn:
#          global: cdn.nodefony.com
#       or
#       cdn:
#         stylesheet:
#           - cdn.nodefony.com
#         javascript:
#           - cdn.nodefony.com
#         image:
#           - cdn.nodefony.com
#           - cdn.nodefony.fr
#         font:
#           - cdn.nodefony.com
#
cdn                             : ~
                                                  </pre>
    </p>

    <h2>Running NODEFONY :
      <small>See more
        <a href="{{ path('documentation-section',{section:'running', version:version, bundle:bundle })}}">( RUN Nodefony documentation )
        </a>
      </small>
    </h2>
    <div class="doc2">

      <pre>

                                                    # run appliation in dev mode

                                                    $ nodefony dev

                                                  </pre>
    </div>

    <h2>ACCEES NODEFONY APPLICATION :
    </h2>
    <div class="doc2">
      <p>
        Access to App with URL :
        <strong>http://localhost:5151</strong><br>
      </p>
    </div>

    <div class="row">
      <img width="800" height="463" src="/documentation-bundle/images/nodefony.png" />
    </div>


    <div class="container-fluid">
      <h2>SIMPLE EXAMPLES NODEFONY FRAMEWORK :</h2>
      <h3 name="rawRender" id="rawRender">Rendering html :</h3>
      <div class="card card-info">
        <div class="card-header">
          <strong>Simple Render html</strong>
        </div>
        <div class="card-body">
          <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
              <a class="nav-link active" id="routing-tab" data-toggle="tab" href="#routing" role="tab" aria-controls="routing" aria-selected="true">
                routing.js
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="controler-tab" data-toggle="tab" href="#controler" role="tab" aria-controls="controler" aria-selected="false">
                demoController.js
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="result-tab" data-toggle="tab" href="#result" role="tab" aria-controls="result" aria-selected="false">
                Result
              </a>
            </li>
          </ul>
          <div class="tab-content">

            <div class="tab-pane fade show active" id="routing" role="tabpanel" aria-labelledby="routing-tab">
              <p>
                URL :
                <code>
                  http://localhost:5151/doc/demo/html/nodefony
                </code>
              </p>
              <pre>
module.exports = {
  "documentation-demo": {
    pattern: "/doc/demo/html/{name}",
    defaults: {
      controller: "documentation-bundle:demo:html",
      name:	"nodefony"
    }
  }
};
              </pre>
            </div>

            <div class="tab-pane fade" id="controler" role="tabpanel" aria-labelledby="controler-tab">
              <pre>
/*
*	class democontroller
*
*/
module.exports = class democontroller extends nodefony.controller {
  /*
  *	constructor
  */
  constructor (container, context){
    super(container, context);
  }
  /*
  *	action html
  *
  */
  htmlaction (name){
    return <strong>this.renderresponse</strong>('&lt;h1&gt;'+name+'&lt;/h1&gt;');
  }
};
              </pre>
            </div>

            <div class="tab-pane fade" id="result" role="tabpanel" aria-labelledby="result-tab">
              {{render( controller( "documentation-bundle:demo:html", "nodefony") ) }}
            </div>
          </div>
        </div>
      </div>
    </div>


    <div class="container-fluid">
      <h3 name="simpleTemplate" id="simpleTemplate">Rendering Templates :</h3>
      <div class="card card-info">
        <div class="card-header">
          <strong>Rendering Twig Templates</strong>
        </div>
        <div class="card-body ">
          <ul class="nav nav-tabs">
            <li role="presentation" class="active">
              <a data-target="#routing1" data-toggle="tab">routing.yml</a>
            </li>
            <li role="presentation">
              <a data-target="#controler1" data-toggle="tab">demoController.js</a>
            </li>
            <li role="presentation">
              <a data-target="#twig1" data-toggle="tab">Twig</a>
            </li>
            <li role="presentation">
              <a data-target="#result1" data-toggle="tab">Result</a>
            </li>
          </ul>

          <div class="tab-content ">
            <div id="routing1" class="nav-item active">
              <br>
              <p>
                URL :
                <code>
                  http://localhost:5151/doc/demo/render/nodefony
                </code>
              </p>
              <pre>
documentation-demo-render:
pattern:  /doc/demo/render/{name}
defaults: {controller: "documentation-bundle:demo:render", "name":"nodefony"}
              </pre>
            </div>

            <div id="controler1" class="nav-item ">
              <p></p>
              <pre>
/*
*	class democontroller
*
*/
module.exports = class democontroller extends nodefony.controller {
  /*
  *	constructor
  */
  constructor (container, context){
    super(container, context);
  }
  /*
  *	action render
  *
  */
  renderaction (name){
    return this.render('documentation-bundle:demo:index.html.twig', {
      name:name,
    });
  }
};
              </pre>
            </div>
            <div id="twig1" class="nav-item">
              <pre>
&lt;h1&gt; &#123;&#123;name&#125;&#125; &lt;/h1&gt;
              </pre>
            </div>

            <div id="result1" class="nav-item">
              {{render( controller( "documentation-bundle:demo:render", "nodefony") ) }}
            </div>

          </div>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <h3 name="websocket" id="websocket">Rendering Websocket :</h3>
      <div class="card card-info">
        <div class="card-header">
          <strong>Rendering Websocket</strong>
        </div>
        <div class="card-body">
          <ul class="nav nav-tabs">
            <li role="presentation" class="active">
              <a data-target="#routing3" data-toggle="tab">routing.yml</a>
            </li>
            <li role="presentation">
              <a data-target="#controler3" data-toggle="tab">demoController.js</a>
            </li>
            <li role="presentation">
              <a data-target="#logger3" data-toggle="tab">Logger</a>
            </li>
          </ul>

          <div class="tab-content ">

            <div id="routing3" class="nav-item active">
              <br>
              <p>
                URL :
                <code>
                  ws://localhost:5151/websoket
                </code>
              </p>

              <pre>
websoket:
pattern:  /websoket
defaults: {"controller": "demo-bundle:demo:websoket"}
requirements:
method:
- get
- websocket
              </pre>

            </div>

            <div id="controler3" class="nav-item ">
              <p>
                <div class="alert alert-warning" role="alert">
                  To use websocket you must understand Nodefony Request Context
                </div>
              </p>
              <pre>
/*
*	class democontroller
*
*/
module.exports = class democontroller extends nodefony.controller {
  /*
  *	constructor
  */
  constructor (container, context){
    super(container, context);
  }
  /*
  *	action websoket
  *
  */
  websoketaction (message){
    switch( this.getmethod() ){
      <strong>case "get" :</strong>
      return this.render('demo-bundle:default:websocket.html.twig',{name:"websoket"});
      <strong>case "websocket" :</strong>
      if (message){
        // log  message client in terminal
        this.logger( message.utf8data , "info");
      }else{
        // prepare  push messages server
        // send messages to clients
        let i = 0 ;
        let id = setinterval(() => {
          let mess = "i am a  message "+ i +"\n" ;
          // you can use context to send data
          <strong>this.context.send(mess);</strong>
          //  or call controller method ( renderresponse , render , renderjson )
          <strong>this.renderresponse(mess);</strong>
          // log  message sending in terminal
          this.logger( "send to client :" + mess , "info");
          i++
        }, 1000);

        settimeout(function(){
          clearinterval(id);
          // close reason , descripton
          <strong>this.context.close(1000, "nodefony controller close socket");</strong>
          id = null ;
        }, 10000);
        // event websocket close by client
        <strong>this.context.listen</strong>(this, "onclose" , function(){
          if (id){
            clearinterval(id);
          }
        });
      }
      break;
      <strong>default :</strong>
      throw new error(" method not allowed")
    }
  }
};
              </pre>
            </div>

            <div id="logger3" class="nav-item">
              <br>

              <pre>
<strong>/* you can show log in terminal */</strong>

thu oct 06 2016 15:49:09 info request websocket secure  :  connection websocket connection from : 192.168.100.71 pid :86607 origin : https://nodefony.com:5152
thu oct 06 2016 15:49:09 info controler demo   :  hello server i am a client : mozilla/5.0 (macintosh; intel mac os x 10_11_6) applewebkit/537.36 (khtml, like gecko) chrome/55.0.2879.0 safari/537.36

thu oct 06 2016 15:49:10 info controler demo   : send to client :i am a  message 0
thu oct 06 2016 15:49:11 info controler demo   : send to client :i am a  message 1
thu oct 06 2016 15:49:12 info controler demo   : send to client :i am a  message 2
thu oct 06 2016 15:49:13 info controler demo   : send to client :i am a  message 3
thu oct 06 2016 15:49:14 info controler demo   : send to client :i am a  message 4
thu oct 06 2016 15:49:15 info controler demo   : send to client :i am a  message 5
thu oct 06 2016 15:49:16 info controler demo   : send to client :i am a  message 6
thu oct 06 2016 15:49:17 info controler demo   : send to client :i am a  message 7
thu oct 06 2016 15:49:18 info controler demo   : send to client :i am a  message 8

thu oct 06 2016 15:49:19 info request websocket secure  : thu oct 06 2016 15:49:19 gmt+0200 (cest) connection websocket close : 192.168.100.71 pid :86607 origin : https://nodefony.com:5152 1000 nodefony controller close socket
              </pre>
            </div>
          </div>
        </div>
      </div>
    </div>

    <h3 name="renderJson" id="renderJson">Rendering JSON :</h3>
    <div class="container-fluid">

      <div class="card card-info">
        <div class="card-header">
          <strong>Rendering JSON</strong>
        </div>
        <div class="card-body ">
          <ul class="nav nav-tabs">
            <li role="presentation" class="active">
              <a data-target="#routing4" data-toggle="tab">routing.yml</a>
            </li>
            <li role="presentation">
              <a data-target="#controler4" data-toggle="tab">demoController.js</a>
            </li>
          </ul>
          <div class="tab-content ">
            <div id="routing4" class="nav-item active">
              <br>
              <p>
                URL :
                <code>
                  http://localhost:5151/json
                </code>
              </p>
              <pre>
json:
pattern:  /json
defaults: {"controller": "demo-bundle:demo:json"}
              </pre>
            </div>
            <div id="controler4" class="nav-item ">
              <pre>
/*
*	class democontroller
*
*/
module.exports = class democontroller extends nodefony.controller {
  /*
  *	constructor
  */
  constructor (container, context){
    super(container, context);
  }
  /*
  *	action json
  *
  */
  jsonaction (){
    return <strong>this.renderjson</strong>({
      foo:"bar",
      bar:"foo"
    });
  }
};
            </pre>
            </div>
          </div>
        </div>
      </div>
    </div>
