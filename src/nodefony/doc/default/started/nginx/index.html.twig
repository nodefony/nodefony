{{trans_default_domain("doc")}}

<div class="page-header">
  <h1>
    Nginx
  </h1>
</div>

<h2>You can use nginx in front of nodefony framework
</h2>
<div class="doc2">
  <h4>
    Example nginx configuration :
  </h4>

  <pre>
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
server {
    listen              80;
    listen              443 ssl;
    server_name         www.domain.com;
    ssl_certificate  /path_to_nodefony/config/certificates/nodefony.fr/fullchain.pem;
    ssl_certificate_key /path_to_nodefony/config/certificates/nodefony.fr/privkey.pem;
    ssl_trusted_certificate /path_to_nodefony/config/certificates/nodefony.fr/fullchain.pem;
    return 301 $scheme://domain.com$request_uri;
}

server {
  listen       80;
  server_name  <b>domain.com</b>;

  set  $via    "Nginx";
  if ($http_via) {
    set $via  "$http_via, Nginx";
  }
  location / {
    root /path_to_nodefony/web ;
    proxy_pass <b>http://localhost:5151</b>;
    proxy_http_version 1.1;
    proxy_pass_header Server;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Via  $via;
    proxy_cache_bypass $http_upgrade;
  }

  # SERVING HTTP STATIC CONTENT
  location ~ \.(js|css|png|ico|jpg|jpeg|gif|ttf|font|map|woff.?|twig|txt|html|xml|json|mp3|wmv|avi|mpg|mpeg|mp4|webm|swf|flv)$ {
    root /path_to_nodefony/web;
    expires 7d;
    access_log off;
  }
}
server {
  listen       443 ssl;
  server_name  <b>domain.com</b>;

  ssl_certificate  /path_to_nodefony/config/certificates/nodefony.fr/fullchain.pem;
  ssl_certificate_key /path_to_nodefony/config/certificates/nodefony.fr/privkey.pem;
  ssl_trusted_certificate /path_to_nodefony/config/certificates/nodefony.fr/fullchain.pem;

  set  $via  "Nginx";
  if ($http_via) {
          set $via  "$http_via, Nginx";
  }
  location / {
    root /path_to_nodefony/web ;
    proxy_pass <b>https://localhost:5152</b>;
    proxy_http_version 1.1;
    proxy_pass_header Server;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port ;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Via  $via;
    proxy_cache_bypass $http_upgrade;
  }

  # SERVING HTTPS STATIC CONTENT
  location ~ \.(js|css|png|ico|jpg|jpeg|gif|ttf|font|map|woff.?|twig|txt|html|xml|json|mp3|wmv|avi|mpg|mpeg|mp4|webm|swf|flv)$ {
    root /path_to_nodefony/web;
    expires 7d;
    access_log off;
  }
}
  </pre>
</div>
