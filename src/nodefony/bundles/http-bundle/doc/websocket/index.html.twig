<div class="page-header">
	<h1> Websocket  <span class="label label-success" style="font-size: 50%;"> {{version}} </span></h1>
</div>


<h3 name="websocket" id="websocket" >Rendering Websocket  :</h3>
<div class="doc3 ">
	<div  class="card">
		<div class="card-header"><strong>Rendering Websocket</strong>  </div>
		<div class="card-body ">
			<ul class="nav nav-tabs">
  				<li role="presentation" class="active"><a data-target="#routing3" data-toggle="tab">Routing</a></li>
  				<li role="presentation" ><a data-target="#controler3" data-toggle="tab">Controller</a></li>
  				<li role="presentation" ><a data-target="#logger3" data-toggle="tab">Logger</a></li>
			</ul>

			<div class="tab-content ">

				<div id="routing3" class="tab-pane active">
					<br>
					<p>
					URL : <code> ws://localhost:5151/websoket </code>
					</p>

					<pre>
websoket:
  pattern:  /websoket
  defaults: {"controller": "demo-bundle:demo:websoket"}
  requirements:
    method:
      - GET
      - WEBSOCKET
					</pre>

				</div>

				<div id="controler3" class="tab-pane ">
					<p>
						<div class="alert alert-warning" role="alert">
						To use websocket you must understand Nodefony Request Context
						</div>
					</p>
					<pre>
module.exports = nodefony.registerController("demo", function(){
	/*
	*	Class controller name
	*
	*/
	let demoController = class demoController extends nodefony.controller {
		/*
		*	CONSTRUCTOR
		*/
		constructor (container, context){
			super(container, context);
		}
		/*
		*	Action controller
		*
		*/
		websoketAction (message){
			<strong>var context = this.getContext();</strong>
			switch( this.getMethod() ){
				case "GET" :
					return this.render('demo-bundle:Default:websocket.html.twig',{name:"websoket"});
				break;
				<strong>case "WEBSOCKET" :</strong>
					if (message){
						// LOG  MESSAGE CLIENT IN TERMINAL
						this.logger( message.utf8Data , "INFO");
					}else{
						// PREPARE  PUSH MESSAGES SERVER
						// SEND MESSAGES TO CLIENTS
						var i = 0 ;
						var id = setInterval(() => {
							var mess = "I am a  message "+ i +"\n" ;
							<strong> // You can use context to send data
							context.send(mess);
							//  or call controller method ( renderResponse , render , renderJson )
							this.renderResponse(mess);</strong>
							// LOG  MESSAGE SENDING IN TERMINAL
							this.logger( "SEND TO CLIENT :" + mess , "INFO");
							i++
						}, 1000);

						setTimeout(function(){
							clearInterval(id);
							// close reason , descripton
							<strong>context.close(1000, "NODEFONY CONTROLLER CLOSE SOCKET");</strong>
							id = null ;
						}, 10000);
						// Event websocket close by client
						<strong>context.listen</strong>(this, "onClose" , function(){
							if (id){
								clearInterval(id);
							}
						})
					}
				break;
				default :
					throw new Error(" METHOD NOT ALLOWED")
			}
		}
	};
	// RETURN  class
	return demoController;
});
					</pre>
				</div>

				<div id="logger3" class="tab-pane">
					<br>

					<pre>

<strong>/* YOU CAN SHOW LOG IN TERMINAL */</strong>

Thu Oct 06 2016 15:49:09 INFO REQUEST WEBSOCKET SECURE  :  Connection Websocket Connection from : 192.168.100.71 PID :86607 ORIGIN : https://nodefony.com:5152
Thu Oct 06 2016 15:49:09 INFO CONTROLER demo   :  HELLO SERVER I AM A CLIENT : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2879.0 Safari/537.36

Thu Oct 06 2016 15:49:10 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 0
Thu Oct 06 2016 15:49:11 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 1
Thu Oct 06 2016 15:49:12 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 2
Thu Oct 06 2016 15:49:13 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 3
Thu Oct 06 2016 15:49:14 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 4
Thu Oct 06 2016 15:49:15 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 5
Thu Oct 06 2016 15:49:16 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 6
Thu Oct 06 2016 15:49:17 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 7
Thu Oct 06 2016 15:49:18 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 8

Thu Oct 06 2016 15:49:19 INFO REQUEST WEBSOCKET SECURE  : Thu Oct 06 2016 15:49:19 GMT+0200 (CEST) Connection Websocket CLOSE : 192.168.100.71 PID :86607 ORIGIN : https://nodefony.com:5152 1000 NODEFONY CONTROLLER CLOSE SOCKET
					</pre>
				</div>
			</div>
		</div>
	</div>
</div>
