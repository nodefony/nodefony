#!/usr/bin/env node
 //--inspect-brk
"use strict;";
const path = require("path");
const fs = require("fs");

const nodefony = function () {
  try {
    fs.lstatSync(path.resolve(".core"));
    return require(path.resolve("src", "nodefony"));
  } catch (e) {}
  try {
    return require("nodefony");
  } catch (e) {
    console.error(e);
    throw new Error("Module nodefony not found try npm -g install nodefony");
  }
}();

if (process.env.MODE_START && process.env.MODE_START === "PM2") {
  if (nodefony.appKernel) {
    return module.exports = new nodefony.appKernel("SERVER", "production", false, {});
  }
  throw new Error("Nodefony Production no trunk detected ");
}

if (nodefony.isElectron) {
  nodefony.isElectron.app.on('ready', () => {
    try {
      return new nodefony.cliStart();
    } catch (e) {
      throw e;
    }
  });
  module.exports = nodefony.isElectron;
} else {
  try {
    module.exports = new nodefony.cliStart();
  } catch (e) {
    throw e;
  }
}