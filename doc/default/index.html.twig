{{trans_default_domain("doc")}}

<a href="https://github.com/nodefony/nodefony"><img style="position: fixed; top: 51px; right: 0; border: 0;z-index:8000" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub"></a>

<center>
  <h1> Nodefony Documentation </h1>
  <h2><span class="label label-success " > {{version}} </span><h2>
</center>
<hr>
<div class="container">
<div class="row m-t-xl">

  <div class="col-md-6">
  <div class="panel panel-info">
  <div class="panel-heading">{{ "begin" | trans() }}
  <span class="label label-success pull-right" > {{version}} </span>
  </div>
  <div class="panel-body" style="overflow: auto;">
  <ul>
  <li> <a href="{{ path('documentation-section',{section:'installation', version:version, bundle:bundle })}}"> {{"installation" | trans() | capitalize() }} </a></li>
  <li> <a href="{{ path('documentation-section',{section:'started', version:version, bundle:bundle })}}"> {{"begin" | trans() | capitalize() }} </a></li>
  <li> <a href="{{ path('documentation-version',{version:version, bundle:'App' })}}"> {{"Application" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{version:version ,section:'configurations', bundle:bundle })}}"> {{"configurations" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'running', version:version, bundle:bundle })}}"> {{"running" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'helloWord', version:version, bundle:bundle })}}"> Hello Word </a></li>
  <li> <a href="{{ path('documentation-section',{section:'routing', version:version, bundle:'framework' })}}"> {{"Routing" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'controller', version:version, bundle:'framework' })}}"> {{"controller" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'view', version:version, bundle:'framework' })}}"> {{"view" | trans() | capitalize() }} </a></li>
  <li> <a href="{{ path('documentation-section',{section:'console', version:version, bundle:bundle })}}"> {{"console" | trans() | capitalize() }}</a></li>
  </ul>
  </div>
  </div>
  </div>

  <div class="col-md-6">
  <div class="panel panel-info">
  <div class="panel-heading">{{ "core" | trans() }}
  <span class="label label-success pull-right" > {{version}} </span>
  </div>
  <div class="panel-body" style="overflow: auto;">
  <ul>
  <li> <a href="{{ path('documentation-section',{section:'architectures', version:version, bundle:bundle })}}"> {{"Architecture" | trans() | capitalize() }} </a></li>
  <li> <a href="{{ path('documentation-section',{section:'autoloader', version:version, bundle:bundle })}}"> {{"Autoloader" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'kernel', version:version, bundle:bundle })}}"> {{"Kernel" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'bundles', version:version, bundle:bundle })}}"> {{"Bundles" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'container', version:version, bundle:bundle })}}"> {{"Services Container" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'context', version:version, bundle:bundle })}}"> {{"Request context" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'finder', version:version, bundle:bundle })}}"> {{"Finder" | trans() | capitalize() }}</a></li>
  <li> <a href="{{ path('documentation-section',{section:'fileClass', version:version, bundle:bundle })}}"> {{"fileClass" | trans() | capitalize() }}</a> </li>
  <li> <a href="{{ path('documentation-section',{section:'notifications', version:version, bundle:bundle })}}"> {{"notificationsCenter" | trans() | capitalize() }}</a> </li>
  <li> <a href="{{ path('documentation-section',{section:'syslog', version:version, bundle:bundle })}}"> {{"Syslog" | trans() | capitalize() }}</a> </li>
  </ul>
  </div>
  </div>
  </div>
</div>

<div class="row m-t-xl">

  <div class="col-md-6">
  <div class="panel panel-info">
  <div class="panel-heading">{{ "Bundles" | trans() }}
  </div>
  <div class="panel-body" style="overflow: auto;">
  <ul>
  {% for myBundle in bundles %}
  <li><a href="{{path('documentation-version', {version:myBundle.settings.version, bundle:myBundle.name})}}"><strong>{{myBundle.name}}</strong> <span class="label label-default pull-right">{{myBundle.settings.version}}</span></a></li>
  {% endfor %}
  </ul>
  </div>
  </div>
  </div>

  <div class="col-md-6">
  <div class="panel panel-info">
  <div class="panel-heading">{{ "usage" | trans() }}
  <span class="label label-success pull-right" > {{version}} </span>
  </div>
  <div class="panel-body" style="overflow: auto;">
  <ul>
  <li> <a href="{{ path('documentation-section',{section:'servers', version:version, bundle:'http' })}}"> {{"servers" | trans() | capitalize() }} </a> </li>
  <li> Front Proxy  NGINX </li>
  <li> Production Mode PM2 </li>
  <li> Statics Files</li>
  <li> CDN </li>
  <li> Sessions</li>
  <li> Firewall</li>
  <li> Authentication</li>
  <li> Orm</li>
  <li> <a href="{{ path('documentation-version',{ version:version, bundle:'realTime' })}}"> {{"realtime" | trans() | capitalize() }}</a></li>
  </ul>
  </div>
  </div>
  </div>
</div>


<hr>

<div class="row m-t-xl">
<center>
<h1> {{ "begin" | trans() }} </h1>
<small> <a href="{{ path('documentation-section',{section:'started', version:version, bundle:bundle })}}">More details</a></small>
</br>
</center>


<h2>NODEFONY INSTALLATION : <small>See more <a href="{{ path('documentation-section',{section:'installation', version:version, bundle:bundle })}}">( Nodefony installation  documentation ) </a> </small> </h2>
<p class="doc2">
Get sources from gitHub
</p>
<pre class="doc2">

$ git clone https://github.com/nodefony/nodefony.git

$ cd nodefony

$ make build

</pre>


<h2>Configurations : <small>See more  <a href="{{ path('documentation-section',{section:'configurations', version:version, bundle:bundle })}}">( Nodefony Configurations  documentation ) </a></small></h2>
<p class="doc2" >

  By defaut NODEFONY bind all servers on loopback   ( localhost : 127.0.0.1 ) </br>

  <ul class="doc3">
  <li>
  domain : localhost
  </li>
  <li>
  http : 5151
  </li>
  <li>
  https: 5152
  </li>
  </ul>
  <p class="doc3" >
  If you want change listen port http(s) by defaut or domain  <small>  <a href="{{ path('documentation-section',{section:'configurations', version:version, bundle:bundle, queryString:{'subsection':'framework'} })}}">( Configurations  framework ) </a></small><br>
  Change config.yml Location : <code>./config/config.yml</code>
  </p>
  <pre class="doc3">
<strong>system:
  domain                        : localhost             # nodefony can listen only one domain ( no vhost )  /    [::1] for IPV6 only
  domainAlias:                                          # domainAlias string only <<regexp>>   example ".*\\.nodefony\\.com  ^nodefony\\.eu$ ^.*\\.nodefony\\.eu$"
    - "^127.0.0.1$"
  httpPort                      : 5151
  httpsPort                     : 5152</strong>
  statics                       : true
  security                      : true
  realtime                      : true
  monitoring                    : true
  documentation                 : true
  unitTest                      : true
  locale                        : "en_en"

  servers:
    http                        : true
    https	                : true
    ws			        : true
    wss			        : true
    certificats:
      key                       : "config/certificates/server/privkey.pem"
      cert                      : "config/certificates/server/fullchain.pem"
      ca                        : "config/certificates/ca/nodefony-root-ca.crt.pem"
      options:
        rejectUnauthorized      : false

  bundles:
    hello                       : "src/bundles/demoBundle"

  log:
    active                      : true

#
#       ASSETS CDN
#
#       You set cdn with string
#       CDN :   cdn.nodefony.com
#       or
#       CDN:
#          global: cdn.nodefony.com
#       or
#       CDN:
#         stylesheet:
#           - cdn.nodefony.com
#         javascript:
#           - cdn.nodefony.com
#         image:
#           - cdn.nodefony.com
#           - cdn.nodefony.fr
#         font:
#           - cdn.nodefony.com
#
CDN                             : ~
  </pre>
</p>


<h2>Running NODEFONY : <small>See more  <a href="{{ path('documentation-section',{section:'running', version:version, bundle:bundle })}}">( RUN Nodefony documentation ) </a></small> </h2>
<div class="doc2">

  <pre >

# Run Appliation in DEV mode

$ ./nodefony dev

  </pre>
</div>

<h2>ACCEES NODEFONY APPLICATION :  </h2>
<div class="doc2">
<p >
  Access to App with URL : <strong>http://localhost:5151</strong><br>

  By default the nodefony clone come with a demonstration bundle named "demoBundle"

</p>
</div>

<center>
  <img width="800" height="463" src="/documentationBundle/images/nodefony.png"/>
</center>

<h2>SIMPLE EXAMPLES NODEFONY FRAMEWORK :  </h2>
<h3 name="rawRender" id="rawRender" >Rendering html  :</h3>
<div class="doc3 ">

  <div  class="panel panel-info">
  <div class="panel-heading"><strong>Simple Render html</strong>  </div>
  <div class="panel-body ">
  <ul class="nav nav-tabs">
  				<li role="presentation" class="active"><a data-target="#routing" data-toggle="tab">routing.js</a></li>
  				<li role="presentation" ><a data-target="#controler" data-toggle="tab">demoController.js</a></li>
  				<li role="presentation" ><a data-target="#result" data-toggle="tab">Result</a></li>
  </ul>
  <div class="tab-content ">
  <div id="routing" class="tab-pane active">
  <br>
  <p>
  URL : <code> http://localhost:5151/doc/demo/html/nodefony </code>
  </p>
  <pre>
module.exports = {
  "documentation-demo": {
    pattern: "/doc/demo/html/{name}",
    defaults: {
      controller: "documentationBundle:demo:html",
      name:	"nodefony"
    }
  }
};
  </pre>

  </div>

  <div id="controler" class="tab-pane ">
  <p>
  </p>
  <pre>
/*
 *	Class demoController
 *
 */
module.exports = class demoController extends nodefony.controller {
  /*
   *	CONSTRUCTOR
   */
  constructor (container, context){
    super(container, context);
  }
  /*
 	*	Action html
 	*
 	*/
  htmlAction (name){
    return <strong>this.renderResponse</strong>('&lt;h1&gt;'+name+'&lt;/h1&gt;');
  }
};
  </pre>
  </div>

  <div id="result" class="tab-pane">
    {{render( controller( "documentationBundle:demo:html", "nodefony") ) }}
  </div>
  </div>
  </div>
  </div>
</div>


<h3 name="simpleTemplate" id="simpleTemplate" >Rendering Templates :</h3>
<div class="doc3 ">

  <div  class="panel panel-info">
  <div class="panel-heading"><strong>Rendering Twig Templates</strong>  </div>
  <div class="panel-body ">
  <ul class="nav nav-tabs">
  				<li role="presentation" class="active"><a data-target="#routing1" data-toggle="tab">routing.yml</a></li>
  				<li role="presentation" ><a data-target="#controler1" data-toggle="tab">demoController.js</a></li>
  				<li role="presentation" ><a data-target="#twig1" data-toggle="tab">Twig</a></li>
  				<li role="presentation" ><a data-target="#result1" data-toggle="tab">Result</a></li>
  </ul>

  <div class="tab-content ">
  <div id="routing1" class="tab-pane active">
  <br>
  <p>
  URL : <code> http://localhost:5151/doc/demo/render/nodefony </code>
  </p>
  <pre>
documentation-demo-render:
  pattern:  /doc/demo/render/{name}
  defaults: {controller: "documentationBundle:demo:render", "name":"nodefony"}
  </pre>
  </div>

  <div id="controler1" class="tab-pane ">
  <p>
  </p>
  <pre>
/*
 *	Class demoController
 *
 */
module.exports = class demoController extends nodefony.controller {
  /*
   *	CONSTRUCTOR
   */
  constructor (container, context){
    super(container, context);
  }
  /*
 	*	Action render
 	*
 	*/
  renderAction (name){
    return this.render('documentationBundle:demo:index.html.twig', {
  name:name,
  });
  }
};
  </pre>
  </div>
  <div id="twig1" class="tab-pane">
  <pre>
&lt;h1&gt; &#123;&#123;name&#125;&#125; &lt;/h1&gt;
  </pre>
  </div>

  <div id="result1" class="tab-pane">
    {{render( controller( "documentationBundle:demo:render", "nodefony") ) }}
  </div>

  </div>
  </div>
  </div>
</div>

<h3 name="websocket" id="websocket" >Rendering Websocket  :</h3>
<div class="doc3 ">
  <div  class="panel panel-info">
  <div class="panel-heading"><strong>Rendering Websocket</strong>  </div>
  <div class="panel-body ">
  <ul class="nav nav-tabs">
  				<li role="presentation" class="active"><a data-target="#routing3" data-toggle="tab">routing.yml</a></li>
  				<li role="presentation" ><a data-target="#controler3" data-toggle="tab">demoController.js</a></li>
  				<li role="presentation" ><a data-target="#logger3" data-toggle="tab">Logger</a></li>
  </ul>

  <div class="tab-content ">

  <div id="routing3" class="tab-pane active">
  <br>
  <p>
  URL : <code> ws://localhost:5151/websoket </code>
  </p>

  <pre>
websoket:
  pattern:  /websoket
  defaults: {"controller": "demoBundle:demo:websoket"}
  requirements:
    method:
      - GET
      - WEBSOCKET
  </pre>

  </div>

  <div id="controler3" class="tab-pane ">
  <p>
  <div class="alert alert-warning" role="alert">
  To use websocket you must understand Nodefony Request Context
  </div>
  </p>
  <pre>
/*
*	Class demoController
*
*/
module.exports = class demoController extends nodefony.controller {
  /*
  *	CONSTRUCTOR
  */
  constructor (container, context){
    super(container, context);
  }
  /*
  *	Action websoket
  *
  */
  websoketAction (message){
    switch( this.getMethod() ){
      <strong>case "GET" :</strong>
        return this.render('demoBundle:Default:websocket.html.twig',{name:"websoket"});
      <strong>case "WEBSOCKET" :</strong>
        if (message){
          // LOG  MESSAGE CLIENT IN TERMINAL
          this.logger( message.utf8Data , "INFO");
        }else{
          // PREPARE  PUSH MESSAGES SERVER
          // SEND MESSAGES TO CLIENTS
          let i = 0 ;
          let id = setInterval(() => {
            let mess = "I am a  message "+ i +"\n" ;
             // You can use context to send data
            <strong>this.context.send(mess);</strong>
            //  or call controller method ( renderResponse , render , renderJson )
            <strong>this.renderResponse(mess);</strong>
            // LOG  MESSAGE SENDING IN TERMINAL
            this.logger( "SEND TO CLIENT :" + mess , "INFO");
            i++
          }, 1000);

          setTimeout(function(){
            clearInterval(id);
            // close reason , descripton
            <strong>this.context.close(1000, "NODEFONY CONTROLLER CLOSE SOCKET");</strong>
            id = null ;
          }, 10000);
          // Event websocket close by client
          <strong>this.context.listen</strong>(this, "onClose" , function(){
            if (id){
              clearInterval(id);
            }
          });
        }
        break;
        <strong>default :</strong>
          throw new Error(" METHOD NOT ALLOWED")
        }
      }
    };
  </pre>
  </div>

  <div id="logger3" class="tab-pane">
  <br>

  <pre>

<strong>/* YOU CAN SHOW LOG IN TERMINAL */</strong>

Thu Oct 06 2016 15:49:09 INFO REQUEST WEBSOCKET SECURE  :  Connection Websocket Connection from : 192.168.100.71 PID :86607 ORIGIN : https://nodefony.com:5152
Thu Oct 06 2016 15:49:09 INFO CONTROLER demo   :  HELLO SERVER I AM A CLIENT : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2879.0 Safari/537.36

Thu Oct 06 2016 15:49:10 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 0
Thu Oct 06 2016 15:49:11 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 1
Thu Oct 06 2016 15:49:12 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 2
Thu Oct 06 2016 15:49:13 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 3
Thu Oct 06 2016 15:49:14 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 4
Thu Oct 06 2016 15:49:15 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 5
Thu Oct 06 2016 15:49:16 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 6
Thu Oct 06 2016 15:49:17 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 7
Thu Oct 06 2016 15:49:18 INFO CONTROLER demo   : SEND TO CLIENT :I am a  message 8

Thu Oct 06 2016 15:49:19 INFO REQUEST WEBSOCKET SECURE  : Thu Oct 06 2016 15:49:19 GMT+0200 (CEST) Connection Websocket CLOSE : 192.168.100.71 PID :86607 ORIGIN : https://nodefony.com:5152 1000 NODEFONY CONTROLLER CLOSE SOCKET
  </pre>
  </div>
  </div>
  </div>
  </div>
</div>

<h3 name="renderJson" id="renderJson">Rendering JSON :</h3>
<div class="doc3 ">

  <div  class="panel panel-info">
  <div class="panel-heading"><strong>Rendering JSON</strong>  </div>
  <div class="panel-body ">
  <ul class="nav nav-tabs">
  				<li role="presentation" class="active"><a data-target="#routing4" data-toggle="tab">routing.yml</a></li>
  				<li role="presentation" ><a data-target="#controler4" data-toggle="tab">demoController.js</a></li>
  </ul>
  <div class="tab-content ">
  <div id="routing4" class="tab-pane active">
  <br>
  <p>
  URL : <code> http://localhost:5151/json </code>
  </p>
  <pre>
json:
  pattern:  /json
  defaults: {"controller": "demoBundle:demo:json"}
  </pre>
  </div>
  <div id="controler4" class="tab-pane ">
  <pre>
/*
 *	Class demoController
 *
 */
module.exports = class demoController extends nodefony.controller {
  /*
   *	CONSTRUCTOR
   */
  constructor (container, context){
    super(container, context);
  }
  /*
   *	Action json
   *
   */
  jsonAction (){
    return <strong>this.renderJson</strong>({
      foo:"bar",
      bar:"foo"
    });
  }
};
  </pre>
  </div>
  </div>
  </div>
  </div>
</div>


</div>
</div>
