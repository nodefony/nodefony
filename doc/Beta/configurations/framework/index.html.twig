
<div class="page-header">
	<h1>Framework Configuration  </h1>
	<p>
		<h2 > You can see here :</h2>

		<p>
			<ul>
				<li><a href="#global">Goblal Configuration</a></li>
				<li><a href="#certificates">Servers Certificates </a></li>
				<li><a href="#pm2">Production Configuration PM2 </a></li>
			</ul>
		<p>

	<p>
</div>

<h2>Location Framework configurations in File System </h2>
<div class="doc2">
Location : <code>./config</code>
<pre>
./config/
├── certificates
│   ├── ca
│   │   ├── nodefony-root-ca.crt.pem
│   │   └── nodefony-root-ca.key.pem
│   ├── client
│   │   ├── chain.pem
│   │   └── pubkey.pem
│   └── server
│       ├── cert.pem
│       ├── chain.pem
│       ├── fullchain.pem
│       └── privkey.pem
├── config.yml
└── pm2.json
</pre>
</div>
	
<h2 id="global">Goblal Configuration <span class="badge">File</span></h2>	
<div class="doc2">

<div class="panel panel-default">
  <!-- Default panel contents -->
  <div class="panel-heading"> KERNEL Configuration </div>
  <div class="panel-body">

	  <p>
	  You can find the nodefony KERNEL configuration file  <br>

	  This config file  do multiple tasks as : <br>
	  <ul>	
		  <li> parametrers http(s) servers start , listen domain and port, certificats </li>
		  <li> Domain Alias </li>
		  <li> AutoLoad differents framework bundles as security monitoring ...</li>
		  <li> Autoload services for render statics  files (css, js , images ..)</li>
		  <li> locale (Lang) by default for all framework </li>
		  <li> PM2 management </li>
	  </ul>	


	  Location : <code>./config/config.yml</code>
	  <p>
    	  <pre>
#########################################################
#
#  NODEFONY FRAMEWORK
#
#       KERNEL CONFIG
#
#

name                            : "NODEFONY"
version                         : "2.0.4-beta"
system:
  domain                        : localhost                             # nodefony can listen only one domain ( no vhost )  /    [::1] for IPV6 only
  domainAlias:                                                          # domainAlias string only regexp   example ".*\\.nodefony\\.com  ^nodefony\\.eu$ ^.*\\.nodefony\\.eu$"
    - "^127.0.0.1$" 
    - "^docker.nodefony$"
  httpPort                      : 5151
  httpsPort                     : 5152
  statics                       : true
  security                      : true
  realtime                      : true
  monitoring                    : true
  locale                        : "en_en"

  servers:
    http                        : true
    https	                : true	
    ws			        : true	
    wss			        : true
    certificats:
      key                       : "config/certificates/server/privkey.pem"
      cert                      : "config/certificates/server/fullchain.pem"
      ca                        : "config/certificates/ca/nodefony-root-ca.crt.pem"
      options:
        rejectUnauthorized      : false

  bundles:
    documentation 	        : "./src/nodefony/bundles/documentationBundle"
    test		        : "./src/nodefony/bundles/unitTestBundle"
    demo			: "./src/bundles/demoBundle"

  PM2:
    script		        : "nodefony"
    name			: "nodefony"
    exec_mode		        : "cluster"
    max_memory_restart	        : "1024M"
    autorestart		        : true
    max_restarts		: 10
    watch			: false
    error_file                  : "tmp/nodefony.log" 
    out_file                    : "tmp/nodefony.error.log"
    merge_logs                  : true
    env:
      NODE_ENV                  : "production"
      MODE_START                : "PM2"
  
  log:
    active                      : true
    console                     : false
    file                        : false
    messages                    : "/tmp/nodefony.log"
    error                       : "/tmp/errorNodefony.log"
    #TODO
    rotate                      : false

#
#       ASSETS CDN
#
#       You set cdn with string
#       CDN :   cdn.nodefony.com
#       or 
#       CDN:
#          global: cdn.nodefony.com
#       or
#       CDN:
#         stylesheet:                  
#           - cdn.nodefony.com       
#         javascript:                  
#           - cdn.nodefony.com
#         image:
#           - cdn.nodefony.com
#           - cdn.nodefony.fr
#         font:
#           - cdn.nodefony.com
#
CDN                             : ~
    
#
# ENGINE TEMPLATE
#
#       TWIG
#       https://github.com/justjohn/twig.js
#
templating                      : twig

#
# ENGINE ORM
#
#       SEQUELIZE
#
#
orm                             : sequelize
	  </pre>
  </div>

  <table class="table">
	<thead>
		<th class="config-parameters">Parameters</th>
		<th>Description</th>
		<th>Data Type</th>
		<th>Example / <span class="badge">Default</span> </th>
	</thead>
	  <tbody>	
	  <tr> 
		  <td class="config-parameters">name</td>
		  <td>Name Framework</td>
		  <td>String</td>
		  <td>NODEFONY</td>
	  </tr>	
	  <tr> 
		  <td class="config-parameters">version</td>
		  <td>Version Framework</td>
		  <td>String</td>
		  <td>Alpha</td>
	  </tr>
	  <tr>
		  <td class="config-parameters">system.domain</td> 
		  <td>
			  <p>Domain or IP to listen servers HTTP / HTTPS / WEBSOCKET / WEBSOCKET SECURE  nodefony can listen only one domain </p>
		  </td>
		  <td>String</td>
		  <td>localhost or 192.168.0.230 or 127.0.0.1 <span class="badge">nodefony.com</span></td> 
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.domainAlias</td>
		  <td>Alias of domain  </td>
		  <td>String or array  the separator is space for string type   regexp only  </td>
		  <td>".*\\.nodefony.com  ^nodefony.eu$ ^.*\\.nodefony.eu$"</td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.httpPort</td>
		  <td>Port to listen servers HTTP  / WEBSOCKET </td>
		  <td>String</td>
		  <td><span class="badge">5151</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.httpsPort</td>
		  <td>Port to listen servers HTTPS  / WEBSOCKET SECURE</td>
		  <td>String</td>
		  <td><span class="badge">5152</span></td>
	  </tr>

	  <tr> 
		  <td class="config-parameters">system.servers.http</td>
		  <td>Start http server </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.servers.https</td>
		  <td>Start https server </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.servers.ws</td>
		  <td>Start websocket server </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.servers.wss</td>
		  <td>Start websocket secure server </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	   <tr> 
		  <td class="config-parameters">system.servers.certificats</td>
		  <td>Manage certificats for https and websocket secure server <a href="https://nodejs.org/dist/latest-v7.x/docs/api/tls.html#tls_tls_connect_options_callback">tls.connect(options) </a> </td>
		  <td>Object</td>
		  <td></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.statics</td>
		  <td>
			If active nodefony can Serve  statics files  : configurations of service in Application config file 
			For developement use in production use varnish or similar reverse proxy caches in front to serve statics files
		  </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.security</td>
		  <td>Auto registre Firewall Bundle </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.realtime</td>
		  <td>Auto registre realtime Bundle</td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">system.monitoring</td>
		  <td>Auto registre monitoring Bundle (debugBar ... )</td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">locale</td>
		  <td>I18n lang Framework  </td>
		  <td>String</td>
		  <td><span class="badge">en_en</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">CDN</td>
		  <td> Manages CDN for all differents assets. Can be use in twig templates with built-in &#123;&#123; CDN() &#125;&#125;  </td>
		  <td>Object</td>
		  <td></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.avtive</td>
		  <td>Active syslog in kernel (show log in terminal ) </td>
		  <td>Boolean</td>
		  <td><span class="badge">true</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.console</td>
		  <td>Active syslog in kernel console (CLI) </td>
		  <td>Boolean</td>
		  <td><span class="badge">false</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.file</td>
		  <td>Active syslog  (show log in file system )  </td>
		  <td>Boolean</td>
		  <td><span class="badge">false</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.message</td>
		  <td>File Path for debug messages  in filesystem (log.file) </td>
		  <td>String</td>
		  <td><span class="badge">"/tmp/nodefony.log"</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.error</td>
		  <td>File Path for error messages  in filesystem (log.file) </td>
		  <td>String</td>
		  <td><span class="badge">/tmp/errorNodefony.log</span></td>
	  </tr>
	  <tr> 
		  <td class="config-parameters">log.service</td>
		  <td>File Path for services messages  in filesystem (log.file)</td>
		  <td>String</td>
		  <td><span class="badge">/tmp/servicesNodefony.log</span></td>
	  </tr>
	   <tr> 
		  <td class="config-parameters">templating</td>
		  <td>Template Engine  ( only twig for the moment)</td>
		  <td>String</td>
		  <td><span class="badge">twig</span></td>
	  </tr>
	   <tr> 
		  <td class="config-parameters">orm</td>
		  <td>ORM Engine (only Sequelize for the moment)</td>
		  <td>String</td>
		  <td><span class="badge">sequelize</span></td>
	  </tr>
	  </tbody>  
  </table>
  </div>

</div>

<h2 id="certificates" >Certificates SSL HTTPS <span class="badge">Directory</span> <small><code>./config/certificates</code></small></h2>

<div class="doc2">
<pre>
ls -l ./config/certificates/

total 0
drwxr-xr-x  4 cci  staff  136 15 déc 19:23 ca
drwxr-xr-x  4 cci  staff  136 15 déc 19:23 client
drwxr-xr-x  6 cci  staff  204 15 déc 19:23 server

├── ca
│   ├── nodefony-root-ca.crt.pem
│   └── nodefony-root-ca.key.pem
├── client
│   ├── chain.pem
│   └── pubkey.pem
└── server
    ├── cert.pem
    ├── chain.pem
    ├── fullchain.pem
    └── privkey.pem
</pre>

	<p>
		You can manage your https certificates in this directory <br>
		
	</p>

</div>


<h2 name="pm2" id="pm2">Configuration PM2   </h2>

<div class="doc2">
	<p>
		Configuration nodefony running mode : <a href="{{ path('documentation-section',{section:'running', version:version, bundle:bundle })}}" >PM2</a> (Production process manager for Node.js )  <br>
		This Configuration PM2 use by executable  <code>./nodefony_pm2</code>			
	</p>

	<pre>
  PM2:
    script		        : "nodefony"
    name			: "nodefony"
    exec_mode		        : "cluster"
    max_memory_restart	        : "1024M"
    autorestart		        : true
    max_restarts		: 10
    watch			: false
    error_file                  : "tmp/nodefony.log" 
    out_file                    : "tmp/nodefony.error.log"
    merge_logs                  : true
    env:
      NODE_ENV                  : "production"
      MODE_START                : "PM2"
	</pre>
	<a href="http://pm2.keymetrics.io/docs/usage/cluster-mode/"> Documentation pm2.keymetrics.io </a>
</div>

